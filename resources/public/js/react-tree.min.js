!function(e,t){"function"==typeof define&&define.amd?define(function(){return t()}):"object"==typeof module&&module.exports?module.exports=t():e.Treeview=t()}(this,function(){"use strict";function e(a,n){return React.createElement(t,{data:a,onTreenodeClick:n},a.children.map(function(t){return e(t,n)}))}var t=React.createClass({displayName:"Treenode",propTypes:{data:React.PropTypes.shape({id:React.PropTypes.string.isRequired,text:React.PropTypes.string.isRequired,icon:React.PropTypes.string,opened:React.PropTypes.bool,disabled:React.PropTypes.bool,selected:React.PropTypes.bool})},getInitialState:function(){return{data:this.props.data}},arrowClicked:function(){this.state.data.opened=!this.state.data.opened,this.setState({data:this.props.data})},textClicked:function(){this.props.onTreenodeClick&&this.props.onTreenodeClick.apply(this,arguments)},render:function(){var e="treenode",t="node-text";return e+=this.props.data.opened?" node-opened":" node-closed",this.props.data.selected&&(t+=" node-selected"),React.createElement("div",React.__spread({},this.props,{className:e}),React.createElement("div",{className:"arrow",onClick:this.arrowClicked},"â–¾"),React.createElement("i",{className:"node-icon "+this.props.data.icon}),React.createElement("div",{className:t,onClick:this.textClicked.bind(this,this.props.data.id)},this.state.data.text),this.props.children)}}),a=React.createClass({displayName:"Treeview",propTypes:{dataSource:React.PropTypes.array},dfs:function(e){function t(a){a.children.map(function(e){t(e)}),e(a)}var a={id:"#",children:this.props.dataSource};t(a)},bfs:function(e){function t(t){for(var a=[],n=t;n;)e(n),n.children.map(function(e){a.push(e)}),n=a.shift()}var a={id:"#",children:this.props.dataSource};t(a)},render:function(){var a="",n=this;return React.createElement("div",null,this.props.dataSource.map(function(r,o){return React.createElement(t,{data:r,className:a,onTreenodeClick:n.props.onTreenodeClick},r.children.map(function(t,a){return e(t,n.props.onTreenodeClick)}))}))}});return a});